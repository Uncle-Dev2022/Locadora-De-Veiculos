// <auto-generated />
using System;
using LocadoraDeVeiculos.Infra.Orm.Compartilhado;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LocadoraDeVeiculos.Infra.Orm.Migrations
{
    [DbContext(typeof(LocadoraDeVeiculosDbContext))]
    [Migration("20220805012940_AdicaoLocacao")]
    partial class AdicaoLocacao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloCliente.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNH")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("tipoCliente")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TBCliente");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloCondutor.Condutor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNH")
                        .HasColumnType("VARCHAR(70)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("VARCHAR(70)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(70)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(70)");

                    b.Property<Guid?>("clienteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("clienteId");

                    b.ToTable("TBCondutor");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloFuncionario.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gerente")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("TBFuncionario");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloGrupoDeVeiculos.GrupoDeVeiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("TBGrupoDeVeiculos");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloLocacao.Locacao", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CondutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrupoDeVeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KmAtualVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dataDeDevolucaoPrevista")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dataDeLocacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("funcionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("planoDeCobrancaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("veiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CondutorId");

                    b.HasIndex("GrupoDeVeiculoId");

                    b.HasIndex("funcionarioId");

                    b.HasIndex("planoDeCobrancaId");

                    b.HasIndex("veiculoId");

                    b.ToTable("TBLocacao");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloPlanoDeCobranca.PlanoDeCobranca", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<Guid?>("grupoDeVeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("grupoDeVeiculoId");

                    b.ToTable("TBPlanoDeCobranca");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloTaxas.Taxa", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LocacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("tipoCalculo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<double>("valor")
                        .HasColumnType("FLOAT");

                    b.HasKey("Id");

                    b.HasIndex("LocacaoId");

                    b.ToTable("TBTaxa");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloVeiculo.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnoModelo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("CapacidadeTanque")
                        .HasColumnType("INT");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<Guid?>("GrupoDeVeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Imagem")
                        .IsRequired()
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("VARCHAR(7)");

                    b.Property<decimal>("Quilometragem")
                        .HasColumnType("DECIMAL(18,0)");

                    b.Property<string>("TipoCombustivel")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoDeVeiculoId");

                    b.ToTable("TBVeiculo");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloCondutor.Condutor", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ModuloCliente.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteId");

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloLocacao.Locacao", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ModuloCliente.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocadoraDeVeiculos.Dominio.ModuloCondutor.Condutor", "Condutor")
                        .WithMany()
                        .HasForeignKey("CondutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocadoraDeVeiculos.Dominio.ModuloGrupoDeVeiculos.GrupoDeVeiculo", "GrupoDeVeiculo")
                        .WithMany()
                        .HasForeignKey("GrupoDeVeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocadoraDeVeiculos.Dominio.ModuloFuncionario.Funcionario", "funcionario")
                        .WithMany()
                        .HasForeignKey("funcionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocadoraDeVeiculos.Dominio.ModuloPlanoDeCobranca.PlanoDeCobranca", "planoDeCobranca")
                        .WithMany()
                        .HasForeignKey("planoDeCobrancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocadoraDeVeiculos.Dominio.ModuloVeiculo.Veiculo", "veiculo")
                        .WithMany()
                        .HasForeignKey("veiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Condutor");

                    b.Navigation("funcionario");

                    b.Navigation("GrupoDeVeiculo");

                    b.Navigation("planoDeCobranca");

                    b.Navigation("veiculo");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloPlanoDeCobranca.PlanoDeCobranca", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ModuloGrupoDeVeiculos.GrupoDeVeiculo", "grupoDeVeiculo")
                        .WithMany()
                        .HasForeignKey("grupoDeVeiculoId");

                    b.OwnsOne("LocadoraDeVeiculos.Dominio.ModuloPlanoDeCobranca.PlanoControlado", "planoControlado", b1 =>
                        {
                            b1.Property<Guid>("PlanoDeCobrancaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("limiteKm")
                                .HasColumnType("DECIMAL(11,4)");

                            b1.Property<decimal>("valorDiario")
                                .HasColumnType("DECIMAL(11,4)");

                            b1.Property<decimal>("valorKm")
                                .HasColumnType("DECIMAL(11,4)");

                            b1.HasKey("PlanoDeCobrancaId");

                            b1.ToTable("TBPlanoDeCobranca");

                            b1.WithOwner()
                                .HasForeignKey("PlanoDeCobrancaId");
                        });

                    b.OwnsOne("LocadoraDeVeiculos.Dominio.ModuloPlanoDeCobranca.PlanoDiario", "planoDiario", b1 =>
                        {
                            b1.Property<Guid>("PlanoDeCobrancaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("valorDiario")
                                .HasColumnType("DECIMAL(11,4)");

                            b1.Property<decimal>("valorKm")
                                .HasColumnType("DECIMAL(11,4)");

                            b1.HasKey("PlanoDeCobrancaId");

                            b1.ToTable("TBPlanoDeCobranca");

                            b1.WithOwner()
                                .HasForeignKey("PlanoDeCobrancaId");
                        });

                    b.OwnsOne("LocadoraDeVeiculos.Dominio.ModuloPlanoDeCobranca.PlanoLivre", "planoLivre", b1 =>
                        {
                            b1.Property<Guid>("PlanoDeCobrancaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("valorDiario")
                                .HasColumnType("DECIMAL(11,4)");

                            b1.HasKey("PlanoDeCobrancaId");

                            b1.ToTable("TBPlanoDeCobranca");

                            b1.WithOwner()
                                .HasForeignKey("PlanoDeCobrancaId");
                        });

                    b.Navigation("grupoDeVeiculo");

                    b.Navigation("planoControlado");

                    b.Navigation("planoDiario");

                    b.Navigation("planoLivre");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloTaxas.Taxa", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ModuloLocacao.Locacao", null)
                        .WithMany("Taxas")
                        .HasForeignKey("LocacaoId");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloVeiculo.Veiculo", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ModuloGrupoDeVeiculos.GrupoDeVeiculo", "GrupoDeVeiculo")
                        .WithMany()
                        .HasForeignKey("GrupoDeVeiculoId");

                    b.Navigation("GrupoDeVeiculo");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ModuloLocacao.Locacao", b =>
                {
                    b.Navigation("Taxas");
                });
#pragma warning restore 612, 618
        }
    }
}
